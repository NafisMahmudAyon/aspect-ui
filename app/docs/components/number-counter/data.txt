I'll complete the NumberCounter component documentation and examples for your project. Based on your request, I'll create the necessary files following the pattern used in the accordion component.

Let me start by creating the documentation and examples for the NumberCounter component:

## 1. First, let's create the NumberCounter documentation file (Introduction.mdx)

```mdx
import CodeSnippets from '@/components/CodeSnippets'
import ComponentTable from '@/components/ComponentTable'
import {defaultNumberCounter, formattedNumberCounter, customDurationNumberCounter, scrollTriggerNumberCounter, numberCounterPropsData} from './Code/Code.tsx'

## Table of Contents

## Default Number Counter
---
<CodeSnippets styles="mt-4" content={defaultNumberCounter} lang="javascript" url="examples/components/number-counter/default-number-counter" >
</CodeSnippets>

## Formatted Number Counter
---
<CodeSnippets styles="mt-4" content={formattedNumberCounter} lang="javascript" url="examples/components/number-counter/formatted-number-counter" >
</CodeSnippets>

## Custom Duration Number Counter
---
<CodeSnippets styles="mt-4" content={customDurationNumberCounter} lang="javascript" url="examples/components/number-counter/custom-duration-number-counter" >
</CodeSnippets>

## Scroll Trigger Number Counter
---
<CodeSnippets styles="mt-4" content={scrollTriggerNumberCounter} lang="javascript" url="examples/components/number-counter/scroll-trigger-number-counter" >
</CodeSnippets>

## NumberCounter Props
---
<ComponentTable data={numberCounterPropsData} />
```

## 2. Now let's create the Code.tsx file for the NumberCounter component

```tsx
// In /docs/components/number-counter/Code/Code.tsx
import React from 'react'

// Default NumberCounter example code
export const defaultNumberCounter = `import React from 'react'
import { NumberCounter } from 'aspect-ui'

const DefaultNumberCounter = () => {
  return (
    <div className="flex flex-col items-center justify-center p-6 bg-gray-50 rounded-lg">
      <h3 className="text-lg font-medium mb-2">Total Users</h3>
      <NumberCounter 
        end={1500} 
        duration={2}
      />
    </div>
  )
}

export default DefaultNumberCounter`

// Formatted NumberCounter example code
export const formattedNumberCounter = `import React from 'react'
import { NumberCounter } from 'aspect-ui'

const FormattedNumberCounter = () => {
  return (
    <div className="flex flex-wrap gap-4">
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-blue-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Revenue</h3>
        <NumberCounter 
          end={12500} 
          duration={2.5}
          formatter={(value) => \`$\${value.toLocaleString()}\`}
          className="text-2xl font-bold text-blue-600"
        />
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-green-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Growth</h3>
        <NumberCounter 
          end={27.5} 
          duration={2}
          formatter={(value) => \`\${value}%\`}
          className="text-2xl font-bold text-green-600"
        />
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-purple-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Downloads</h3>
        <NumberCounter 
          end={45123} 
          duration={2.5}
          formatter={(value) => \`\${(value / 1000).toFixed(1)}k\`}
          className="text-2xl font-bold text-purple-600"
        />
      </div>
    </div>
  )
}

export default FormattedNumberCounter`

// Custom Duration NumberCounter example code
export const customDurationNumberCounter = `import React from 'react'
import { NumberCounter } from 'aspect-ui'

const CustomDurationNumberCounter = () => {
  return (
    <div className="flex flex-wrap gap-4">
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-gray-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Fast Counter (1s)</h3>
        <NumberCounter 
          start={0}
          end={1000} 
          duration={1}
          className="text-2xl font-bold"
        />
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-gray-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Medium Counter (2.5s)</h3>
        <NumberCounter 
          start={0}
          end={1000} 
          duration={2.5}
          className="text-2xl font-bold"
        />
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-gray-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Slow Counter (4s)</h3>
        <NumberCounter 
          start={0}
          end={1000} 
          duration={4}
          className="text-2xl font-bold"
        />
      </div>
    </div>
  )
}

export default CustomDurationNumberCounter`

// Scroll Trigger NumberCounter example code
export const scrollTriggerNumberCounter = `import React from 'react'
import { NumberCounter } from 'aspect-ui'

const ScrollTriggerNumberCounter = () => {
  return (
    <div className="flex flex-wrap gap-6 mt-8">
      <div className="flex-1 flex flex-col items-center justify-center p-8 bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl shadow-sm">
        <h3 className="text-lg font-medium text-gray-700 mb-2">Happy Customers</h3>
        <NumberCounter 
          end={15000} 
          duration={3}
          triggerOnScroll
          formatter={(value) => \`\${value.toLocaleString()}+\`}
          className="text-3xl font-bold text-indigo-600"
        />
        <p className="mt-2 text-sm text-gray-600">And counting...</p>
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-8 bg-gradient-to-br from-green-50 to-emerald-50 rounded-xl shadow-sm">
        <h3 className="text-lg font-medium text-gray-700 mb-2">Projects Completed</h3>
        <NumberCounter 
          end={3720} 
          duration={3}
          triggerOnScroll
          formatter={(value) => \`\${value.toLocaleString()}\`}
          className="text-3xl font-bold text-emerald-600"
        />
        <p className="mt-2 text-sm text-gray-600">Successfully delivered</p>
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-8 bg-gradient-to-br from-amber-50 to-orange-50 rounded-xl shadow-sm">
        <h3 className="text-lg font-medium text-gray-700 mb-2">Team Size</h3>
        <NumberCounter 
          end={125} 
          duration={3}
          triggerOnScroll
          formatter={(value) => \`\${value}\`}
          className="text-3xl font-bold text-orange-600"
        />
        <p className="mt-2 text-sm text-gray-600">Talented professionals</p>
      </div>
    </div>
  )
}

export default ScrollTriggerNumberCounter`

// Component props data for documentation
export const numberCounterPropsData = [
  {
    name: 'start',
    type: 'number',
    default: '0',
    description: 'The starting value of the counter.',
    required: false,
  },
  {
    name: 'end',
    type: 'number',
    default: '0',
    description: 'The final value that the counter will animate to.',
    required: true,
  },
  {
    name: 'duration',
    type: 'number',
    default: '2',
    description: 'Duration of the animation in seconds.',
    required: false,
  },
  {
    name: 'delay',
    type: 'number',
    default: '0',
    description: 'Delay before starting the animation in seconds.',
    required: false,
  },
  {
    name: 'easing',
    type: 'string',
    default: '"linear"',
    description: 'Animation easing function (e.g., "linear", "easeIn", "easeOut").',
    required: false,
  },
  {
    name: 'formatter',
    type: '(value: number) => string',
    default: 'undefined',
    description: 'Custom function to format the displayed number (e.g., adding currency symbols or units).',
    required: false,
  },
  {
    name: 'triggerOnScroll',
    type: 'boolean',
    default: 'false',
    description: 'If true, the animation will start when the component enters the viewport.',
    required: false,
  },
  {
    name: 'scrollThreshold',
    type: 'number',
    default: '0.5',
    description: 'The amount of the component that needs to be visible before triggering (0-1).',
    required: false,
  },
  {
    name: 'className',
    type: 'string',
    default: '""',
    description: 'Additional CSS class names to apply to the number counter.',
    required: false,
  },
  {
    name: 'component',
    type: 'React.ElementType',
    default: '"div"',
    description: 'The HTML element or React component to render as the container.',
    required: false,
  },
]
```

## 3. Let's create the example components for NumberCounter

### default-number-counter.tsx
```tsx
// In /examples/components/number-counter/default-number-counter.tsx
import React from 'react'
import { NumberCounter } from 'aspect-ui'

const DefaultNumberCounter = () => {
  return (
    <div className="flex flex-col items-center justify-center p-6 bg-gray-50 rounded-lg">
      <h3 className="text-lg font-medium mb-2">Total Users</h3>
      <NumberCounter 
        end={1500} 
        duration={2}
      />
    </div>
  )
}

export default DefaultNumberCounter
```

### formatted-number-counter.tsx
```tsx
// In /examples/components/number-counter/formatted-number-counter.tsx
import React from 'react'
import { NumberCounter } from 'aspect-ui'

const FormattedNumberCounter = () => {
  return (
    <div className="flex flex-wrap gap-4">
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-blue-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Revenue</h3>
        <NumberCounter 
          end={12500} 
          duration={2.5}
          formatter={(value) => `$${value.toLocaleString()}`}
          className="text-2xl font-bold text-blue-600"
        />
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-green-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Growth</h3>
        <NumberCounter 
          end={27.5} 
          duration={2}
          formatter={(value) => `${value}%`}
          className="text-2xl font-bold text-green-600"
        />
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-purple-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Downloads</h3>
        <NumberCounter 
          end={45123} 
          duration={2.5}
          formatter={(value) => `${(value / 1000).toFixed(1)}k`}
          className="text-2xl font-bold text-purple-600"
        />
      </div>
    </div>
  )
}

export default FormattedNumberCounter
```

### custom-duration-number-counter.tsx
```tsx
// In /examples/components/number-counter/custom-duration-number-counter.tsx
import React from 'react'
import { NumberCounter } from 'aspect-ui'

const CustomDurationNumberCounter = () => {
  return (
    <div className="flex flex-wrap gap-4">
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-gray-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Fast Counter (1s)</h3>
        <NumberCounter 
          start={0}
          end={1000} 
          duration={1}
          className="text-2xl font-bold"
        />
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-gray-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Medium Counter (2.5s)</h3>
        <NumberCounter 
          start={0}
          end={1000} 
          duration={2.5}
          className="text-2xl font-bold"
        />
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-6 bg-gray-50 rounded-lg">
        <h3 className="text-lg font-medium mb-2">Slow Counter (4s)</h3>
        <NumberCounter 
          start={0}
          end={1000} 
          duration={4}
          className="text-2xl font-bold"
        />
      </div>
    </div>
  )
}

export default CustomDurationNumberCounter
```

### scroll-trigger-number-counter.tsx
```tsx
// In /examples/components/number-counter/scroll-trigger-number-counter.tsx
import React from 'react'
import { NumberCounter } from 'aspect-ui'

const ScrollTriggerNumberCounter = () => {
  return (
    <div className="flex flex-wrap gap-6 mt-8">
      <div className="flex-1 flex flex-col items-center justify-center p-8 bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl shadow-sm">
        <h3 className="text-lg font-medium text-gray-700 mb-2">Happy Customers</h3>
        <NumberCounter 
          end={15000} 
          duration={3}
          triggerOnScroll
          formatter={(value) => `${value.toLocaleString()}+`}
          className="text-3xl font-bold text-indigo-600"
        />
        <p className="mt-2 text-sm text-gray-600">And counting...</p>
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-8 bg-gradient-to-br from-green-50 to-emerald-50 rounded-xl shadow-sm">
        <h3 className="text-lg font-medium text-gray-700 mb-2">Projects Completed</h3>
        <NumberCounter 
          end={3720} 
          duration={3}
          triggerOnScroll
          formatter={(value) => `${value.toLocaleString()}`}
          className="text-3xl font-bold text-emerald-600"
        />
        <p className="mt-2 text-sm text-gray-600">Successfully delivered</p>
      </div>
      
      <div className="flex-1 flex flex-col items-center justify-center p-8 bg-gradient-to-br from-amber-50 to-orange-50 rounded-xl shadow-sm">
        <h3 className="text-lg font-medium text-gray-700 mb-2">Team Size</h3>
        <NumberCounter 
          end={125} 
          duration={3}
          triggerOnScroll
          formatter={(value) => `${value}`}
          className="text-3xl font-bold text-orange-600"
        />
        <p className="mt-2 text-sm text-gray-600">Talented professionals</p>
      </div>
    </div>
  )
}

export default ScrollTriggerNumberCounter
```

## 4. Check the page.tsx file for the NumberCounter component

I can see that the `page.tsx` file in the number-counter component is already set up with appropriate metadata and component structure:

- The correct title "NumberCounter - Aspect UI"
- A description of the NumberCounter component
- References to the Introduction component
- The EditPage component for navigation

This completes the documentation and examples for the NumberCounter component, following the structure of other components like accordion, alert, and avatar. The documentation includes examples of:

1. Default NumberCounter - A simple animated counter
2. Formatted NumberCounter - Various formatting options (currency, percentage, abbreviations)
3. Custom Duration NumberCounter - Different animation speeds
4. Scroll Trigger NumberCounter - Animations that start when scrolled into view

Each example demonstrates different aspects of the NumberCounter component's functionality, with code snippets that can be copied and used directly.