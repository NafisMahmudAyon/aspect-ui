I'll create documentation for the Dropdown component by examining the Dropdown component files and following the same structure as the Accordion documentation. I'll also create example files for the component.

## 1. First, let's create the `/docs/components/dropdown/Introduction.mdx` file:

```mdx
import CodeSnippets from '@/components/CodeSnippets'
import ComponentTable from '@/components/ComponentTable'
import {
  defaultDropdown,
  placements,
  customTrigger,
  nestedDropdown,
  iconDropdown,
  dropdownPropsData,
  dropdownMenuPropsData,
  dropdownMenuItemPropsData,
  dropdownTriggerPropsData
} from './Code/Code.tsx'

## Table of Contents

## Default Dropdown
---
<CodeSnippets styles="mt-4" content={defaultDropdown} lang="typescript" url="examples/components/dropdown/default-dropdown">
</CodeSnippets>

## Dropdown Placements
---
<CodeSnippets styles="mt-4" content={placements} lang="typescript" url="examples/components/dropdown/dropdown-placements">
</CodeSnippets>

## Custom Trigger
---
<CodeSnippets styles="mt-4" content={customTrigger} lang="typescript" url="examples/components/dropdown/custom-trigger">
</CodeSnippets>

## Nested Dropdown
---
<CodeSnippets styles="mt-4" content={nestedDropdown} lang="typescript" url="examples/components/dropdown/nested-dropdown">
</CodeSnippets>

## Dropdown with Icons
---
<CodeSnippets styles="mt-4" content={iconDropdown} lang="typescript" url="examples/components/dropdown/icon-dropdown">
</CodeSnippets>

## API Reference
---

### Dropdown Props
<ComponentTable data={dropdownPropsData} />

### DropdownMenu Props
<ComponentTable data={dropdownMenuPropsData} />

### DropdownMenuItem Props
<ComponentTable data={dropdownMenuItemPropsData} />

### DropdownTrigger Props
<ComponentTable data={dropdownTriggerPropsData} />
```

## 2. Now, let's create the `/docs/components/dropdown/Code/Code.tsx` file:

```tsx
// In /docs/components/dropdown/Code/Code.tsx

export const defaultDropdown = `import { Dropdown, DropdownMenu, DropdownMenuItem, DropdownTrigger } from "@/app/src";

export default function DefaultDropdown() {
  return (
    <Dropdown>
      <DropdownTrigger>
        <button className="px-4 py-2 rounded-md bg-primary text-white">
          Click me
        </button>
      </DropdownTrigger>
      <DropdownMenu>
        <DropdownMenuItem onSelect={() => console.log("Item 1 selected")}>
          Item 1
        </DropdownMenuItem>
        <DropdownMenuItem onSelect={() => console.log("Item 2 selected")}>
          Item 2
        </DropdownMenuItem>
        <DropdownMenuItem onSelect={() => console.log("Item 3 selected")}>
          Item 3
        </DropdownMenuItem>
      </DropdownMenu>
    </Dropdown>
  );
}`;

export const placements = `import { Dropdown, DropdownMenu, DropdownMenuItem, DropdownTrigger } from "@/app/src";

export default function DropdownPlacements() {
  return (
    <div className="flex items-center justify-around gap-4 mb-20">
      <Dropdown placement="bottom-start">
        <DropdownTrigger>
          <button className="px-4 py-2 rounded-md bg-primary text-white">
            Bottom Start
          </button>
        </DropdownTrigger>
        <DropdownMenu>
          <DropdownMenuItem>Item 1</DropdownMenuItem>
          <DropdownMenuItem>Item 2</DropdownMenuItem>
          <DropdownMenuItem>Item 3</DropdownMenuItem>
        </DropdownMenu>
      </Dropdown>

      <Dropdown placement="bottom">
        <DropdownTrigger>
          <button className="px-4 py-2 rounded-md bg-primary text-white">
            Bottom
          </button>
        </DropdownTrigger>
        <DropdownMenu>
          <DropdownMenuItem>Item 1</DropdownMenuItem>
          <DropdownMenuItem>Item 2</DropdownMenuItem>
          <DropdownMenuItem>Item 3</DropdownMenuItem>
        </DropdownMenu>
      </Dropdown>

      <Dropdown placement="bottom-end">
        <DropdownTrigger>
          <button className="px-4 py-2 rounded-md bg-primary text-white">
            Bottom End
          </button>
        </DropdownTrigger>
        <DropdownMenu>
          <DropdownMenuItem>Item 1</DropdownMenuItem>
          <DropdownMenuItem>Item 2</DropdownMenuItem>
          <DropdownMenuItem>Item 3</DropdownMenuItem>
        </DropdownMenu>
      </Dropdown>
    </div>
  );
}`;

export const customTrigger = `import { Dropdown, DropdownMenu, DropdownMenuItem, DropdownTrigger } from "@/app/src";

export default function CustomTrigger() {
  return (
    <Dropdown>
      <DropdownTrigger>
        <div className="flex items-center gap-2 p-3 border rounded-lg cursor-pointer hover:bg-gray-50">
          <img 
            src="https://randomuser.me/api/portraits/women/44.jpg" 
            alt="Profile" 
            className="w-8 h-8 rounded-full"
          />
          <div>
            <div className="font-medium">Jane Cooper</div>
            <div className="text-xs text-gray-500">jane@example.com</div>
          </div>
          <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
          </svg>
        </div>
      </DropdownTrigger>
      <DropdownMenu>
        <DropdownMenuItem>View Profile</DropdownMenuItem>
        <DropdownMenuItem>Account Settings</DropdownMenuItem>
        <DropdownMenuItem className="text-red-500">Sign Out</DropdownMenuItem>
      </DropdownMenu>
    </Dropdown>
  );
}`;

export const nestedDropdown = `import { Dropdown, DropdownMenu, DropdownMenuItem, DropdownTrigger } from "@/app/src";

export default function NestedDropdown() {
  return (
    <Dropdown>
      <DropdownTrigger>
        <button className="px-4 py-2 rounded-md bg-primary text-white">
          File Options
        </button>
      </DropdownTrigger>
      <DropdownMenu>
        <DropdownMenuItem>New</DropdownMenuItem>
        <DropdownMenuItem>Open</DropdownMenuItem>
        <Dropdown>
          <DropdownTrigger asChild>
            <DropdownMenuItem className="flex items-center justify-between">
              Export As
              <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
              </svg>
            </DropdownMenuItem>
          </DropdownTrigger>
          <DropdownMenu>
            <DropdownMenuItem>PDF</DropdownMenuItem>
            <DropdownMenuItem>DOCX</DropdownMenuItem>
            <DropdownMenuItem>TXT</DropdownMenuItem>
          </DropdownMenu>
        </Dropdown>
        <DropdownMenuItem>Save</DropdownMenuItem>
        <DropdownMenuItem>Save As</DropdownMenuItem>
      </DropdownMenu>
    </Dropdown>
  );
}`;

export const iconDropdown = `import { Dropdown, DropdownMenu, DropdownMenuItem, DropdownTrigger } from "@/app/src";

export default function IconDropdown() {
  return (
    <Dropdown>
      <DropdownTrigger>
        <button className="px-4 py-2 rounded-md bg-primary text-white">
          Actions
        </button>
      </DropdownTrigger>
      <DropdownMenu>
        <DropdownMenuItem className="flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
          </svg>
          View
        </DropdownMenuItem>
        <DropdownMenuItem className="flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
          </svg>
          Edit
        </DropdownMenuItem>
        <DropdownMenuItem className="flex items-center gap-2 text-red-500">
          <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
          </svg>
          Delete
        </DropdownMenuItem>
      </DropdownMenu>
    </Dropdown>
  );
}`;

export const dropdownPropsData = [
  {
    name: 'open',
    type: 'boolean',
    default: 'false',
    description: 'Controls the open state of the dropdown',
  },
  {
    name: 'onOpenChange',
    type: '(open: boolean) => void',
    default: '',
    description: 'Callback when the open state changes',
  },
  {
    name: 'placement',
    type: "'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end'",
    default: "'bottom'",
    description: 'Position of the dropdown menu relative to the trigger',
  },
  {
    name: 'offset',
    type: 'number',
    default: '5',
    description: 'Distance between the dropdown menu and trigger',
  },
  {
    name: 'children',
    type: 'React.ReactNode',
    default: '',
    description: 'Content for the dropdown (typically a trigger and menu)',
  },
];

export const dropdownMenuPropsData = [
  {
    name: 'className',
    type: 'string',
    default: '',
    description: 'Additional CSS classes for the menu',
  },
  {
    name: 'children',
    type: 'React.ReactNode',
    default: '',
    description: 'Content for the dropdown menu (typically menu items)',
  },
];

export const dropdownMenuItemPropsData = [
  {
    name: 'onSelect',
    type: '() => void',
    default: '',
    description: 'Callback when the item is selected',
  },
  {
    name: 'disabled',
    type: 'boolean',
    default: 'false',
    description: 'Disables the menu item',
  },
  {
    name: 'className',
    type: 'string',
    default: '',
    description: 'Additional CSS classes for the menu item',
  },
  {
    name: 'children',
    type: 'React.ReactNode',
    default: '',
    description: 'Content for the menu item',
  },
];

export const dropdownTriggerPropsData = [
  {
    name: 'asChild',
    type: 'boolean',
    default: 'false',
    description: 'Use a child component as the trigger element',
  },
  {
    name: 'className',
    type: 'string',
    default: '',
    description: 'Additional CSS classes for the trigger',
  },
  {
    name: 'children',
    type: 'React.ReactNode',
    default: '',
    description: 'The trigger element',
  },
];
```

## 3. Let's create the index.js file:

```jsx
import Introduction from './Introduction.mdx'

export default Introduction
```

## 4. Let's create the example files in the examples/components/dropdown directory:

### 1. default-dropdown.tsx

```tsx
import { Dropdown, DropdownMenu, DropdownMenuItem, DropdownTrigger } from "@/app/src";

export default function DefaultDropdown() {
  return (
    <Dropdown>
      <DropdownTrigger>
        <button className="px-4 py-2 rounded-md bg-primary text-white">
          Click me
        </button>
      </DropdownTrigger>
      <DropdownMenu>
        <DropdownMenuItem onSelect={() => console.log("Item 1 selected")}>
          Item 1
        </DropdownMenuItem>
        <DropdownMenuItem onSelect={() => console.log("Item 2 selected")}>
          Item 2
        </DropdownMenuItem>
        <DropdownMenuItem onSelect={() => console.log("Item 3 selected")}>
          Item 3
        </DropdownMenuItem>
      </DropdownMenu>
    </Dropdown>
  );
}
```

### 2. dropdown-placements.tsx

```tsx
import { Dropdown, DropdownMenu, DropdownMenuItem, DropdownTrigger } from "@/app/src";

export default function DropdownPlacements() {
  return (
    <div className="flex items-center justify-around gap-4 mb-20">
      <Dropdown placement="bottom-start">
        <DropdownTrigger>
          <button className="px-4 py-2 rounded-md bg-primary text-white">
            Bottom Start
          </button>
        </DropdownTrigger>
        <DropdownMenu>
          <DropdownMenuItem>Item 1</DropdownMenuItem>
          <DropdownMenuItem>Item 2</DropdownMenuItem>
          <DropdownMenuItem>Item 3</DropdownMenuItem>
        </DropdownMenu>
      </Dropdown>

      <Dropdown placement="bottom">
        <DropdownTrigger>
          <button className="px-4 py-2 rounded-md bg-primary text-white">
            Bottom
          </button>
        </DropdownTrigger>
        <DropdownMenu>
          <DropdownMenuItem>Item 1</DropdownMenuItem>
          <DropdownMenuItem>Item 2</DropdownMenuItem>
          <DropdownMenuItem>Item 3</DropdownMenuItem>
        </DropdownMenu>
      </Dropdown>

      <Dropdown placement="bottom-end">
        <DropdownTrigger>
          <button className="px-4 py-2 rounded-md bg-primary text-white">
            Bottom End
          </button>
        </DropdownTrigger>
        <DropdownMenu>
          <DropdownMenuItem>Item 1</DropdownMenuItem>
          <DropdownMenuItem>Item 2</DropdownMenuItem>
          <DropdownMenuItem>Item 3</DropdownMenuItem>
        </DropdownMenu>
      </Dropdown>
    </div>
  );
}
```

### 3. custom-trigger.tsx

```tsx
import { Dropdown, DropdownMenu, DropdownMenuItem, DropdownTrigger } from "@/app/src";

export default function CustomTrigger() {
  return (
    <Dropdown>
      <DropdownTrigger>
        <div className="flex items-center gap-2 p-3 border rounded-lg cursor-pointer hover:bg-gray-50">
          <img 
            src="https://randomuser.me/api/portraits/women/44.jpg" 
            alt="Profile" 
            className="w-8 h-8 rounded-full"
          />
          <div>
            <div className="font-medium">Jane Cooper</div>
            <div className="text-xs text-gray-500">jane@example.com</div>
          </div>
          <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
          </svg>
        </div>
      </DropdownTrigger>
      <DropdownMenu>
        <DropdownMenuItem>View Profile</DropdownMenuItem>
        <DropdownMenuItem>Account Settings</DropdownMenuItem>
        <DropdownMenuItem className="text-red-500">Sign Out</DropdownMenuItem>
      </DropdownMenu>
    </Dropdown>
  );
}
```

### 4. nested-dropdown.tsx

```tsx
import { Dropdown, DropdownMenu, DropdownMenuItem, DropdownTrigger } from "@/app/src";

export default function NestedDropdown() {
  return (
    <Dropdown>
      <DropdownTrigger>
        <button className="px-4 py-2 rounded-md bg-primary text-white">
          File Options
        </button>
      </DropdownTrigger>
      <DropdownMenu>
        <DropdownMenuItem>New</DropdownMenuItem>
        <DropdownMenuItem>Open</DropdownMenuItem>
        <Dropdown>
          <DropdownTrigger asChild>
            <DropdownMenuItem className="flex items-center justify-between">
              Export As
              <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
              </svg>
            </DropdownMenuItem>
          </DropdownTrigger>
          <DropdownMenu>
            <DropdownMenuItem>PDF</DropdownMenuItem>
            <DropdownMenuItem>DOCX</DropdownMenuItem>
            <DropdownMenuItem>TXT</DropdownMenuItem>
          </DropdownMenu>
        </Dropdown>
        <DropdownMenuItem>Save</DropdownMenuItem>
        <DropdownMenuItem>Save As</DropdownMenuItem>
      </DropdownMenu>
    </Dropdown>
  );
}
```

### 5. icon-dropdown.tsx

```tsx
import { Dropdown, DropdownMenu, DropdownMenuItem, DropdownTrigger } from "@/app/src";

export default function IconDropdown() {
  return (
    <Dropdown>
      <DropdownTrigger>
        <button className="px-4 py-2 rounded-md bg-primary text-white">
          Actions
        </button>
      </DropdownTrigger>
      <DropdownMenu>
        <DropdownMenuItem className="flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
          </svg>
          View
        </DropdownMenuItem>
        <DropdownMenuItem className="flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
          </svg>
          Edit
        </DropdownMenuItem>
        <DropdownMenuItem className="flex items-center gap-2 text-red-500">
          <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
          </svg>
          Delete
        </DropdownMenuItem>
      </DropdownMenu>
    </Dropdown>
  );
}
```

## 5. Additionally, let's create a date-picker example for the dropdown:

### examples/components/dropdown/date-picker-dropdown.tsx

```tsx
import { Dropdown, DropdownMenu, DropdownTrigger, DatePicker } from "@/app/src";
import { useState } from "react";

export default function DatePickerDropdown() {
  const [selectedDate, setSelectedDate] = useState<Date | null>(null);

  const handleDateChange = (dates: Date[]) => {
    if (dates.length > 0) {
      setSelectedDate(dates[0]);
    }
  };

  const formatDate = (date: Date | null) => {
    if (!date) return "Select a date";
    return date.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  };

  return (
    <Dropdown>
      <DropdownTrigger>
        <button className="px-4 py-2 border rounded-md flex items-center justify-between min-w-[200px]">
          <span>{formatDate(selectedDate)}</span>
          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
            <path fillRule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clipRule="evenodd" />
          </svg>
        </button>
      </DropdownTrigger>
      <DropdownMenu className="p-0">
        <div className="p-1">
          <DatePicker 
            onChange={handleDateChange}
            initialDates={selectedDate ? [selectedDate] : []}
          />
        </div>
      </DropdownMenu>
    </Dropdown>
  );
}
```

And now we should add this example to our Introduction.mdx file by adding it after the Icon Dropdown section:

```mdx
## DatePicker in Dropdown
---
<CodeSnippets styles="mt-4" content={datePickerDropdown} lang="typescript" url="examples/components/dropdown/date-picker-dropdown">
</CodeSnippets>
```

And adding the export to our Code.tsx file:

```tsx
export const datePickerDropdown = `import { Dropdown, DropdownMenu, DropdownTrigger, DatePicker } from "@/app/src";
import { useState } from "react";

export default function DatePickerDropdown() {
  const [selectedDate, setSelectedDate] = useState(null);

  const handleDateChange = (dates) => {
    if (dates.length > 0) {
      setSelectedDate(dates[0]);
    }
  };

  const formatDate = (date) => {
    if (!date) return "Select a date";
    return date.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  };

  return (
    <Dropdown>
      <DropdownTrigger>
        <button className="px-4 py-2 border rounded-md flex items-center justify-between min-w-[200px]">
          <span>{formatDate(selectedDate)}</span>
          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
            <path fillRule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clipRule="evenodd" />
          </svg>
        </button>
      </DropdownTrigger>
      <DropdownMenu className="p-0">
        <div className="p-1">
          <DatePicker 
            onChange={handleDateChange}
            initialDates={selectedDate ? [selectedDate] : []}
          />
        </div>
      </DropdownMenu>
    </Dropdown>
  );
}`;
```

I've created a comprehensive documentation for the Dropdown component following the same structure as the Accordion component. The documentation includes:

1. An Introduction.mdx file with examples and API references
2. A Code.tsx file with code snippets for the examples
3. An index.js file that exports the Introduction component
4. Example files in the examples/components/dropdown directory:
   - Default dropdown
   - Dropdown with different placements
   - Custom trigger for dropdown
   - Nested dropdown menu
   - Dropdown with icons
   - A special date-picker dropdown example

All examples are properly documented and the API reference includes props for all the components in the Dropdown family: Dropdown, DropdownMenu, DropdownMenuItem, and DropdownTrigger.