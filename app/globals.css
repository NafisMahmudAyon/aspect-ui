@import url('https://fonts.googleapis.com/css2?family=Metrophobic&family=Fira+Code&display=swap');
@import './index.css';
@import 'tailwindcss';

@import './src/components/aspect-ui.css';

@config '../tailwind.config.ts';

/* .test {
  color: var(--color-primary-500);
} */

/* :root {
	--bg-dark: hsl(0, 0%, 90%);
	--bg: hsl(0, 0%, 95%);
	--bg-light: hsl(0, 0%, 100%);
	--text: hsl(0, 0%, 5%);
	--text-muted: hsl(0, 0%, 30%);
	--border: hsl(0, 0%, 80%);
	--primary: hsl(185, 37%, 20%);
	--primary-foreground: hsl(183, 28%, 74%);
} */

@theme {
  --animate-float: float 2s ease-in-out infinite;
  --animate-float-2: float 2s ease-in-out 1s infinite;
  --animate-float-3: float 2s ease-in-out 2s infinite;
  --animate-float-4: float 2s ease-in-out 3s infinite;
  @keyframes float {
    0% {
      transform: translate(0, 0);
    }
    50% {
      transform: translate(0, 5px);
    }
    100% {
      transform: translate(0, 0);
    }
  }
}

.no-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.no-scrollbar::-webkit-scrollbar {
  display: none;
}

/* .dark {
	--bg-dark: hsl(0, 0%, 0%);
	--bg: hsl(0, 0%, 5%);
	--bg-light: hsl(0, 0%, 10%);
	--text: hsl(0, 0%, 95%);
	--text-muted: hsl(0, 0%, 70%);
	--border: hsl(0, 0%, 20%);
	--primary: hsl(183, 28%, 74%);
	--primary-foreground: hsl(185, 37%, 20%);
	--bg-p: hsl(20 0% 50%);
} */

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/

.light-scrollbar::-webkit-scrollbar {
  width: 5px !important;
}
.light-scrollbar::-webkit-scrollbar-track {
  display: none;
}

.light-scrollbar::-webkit-scrollbar-thumb {
  @apply bg-primary-800 dark:bg-primary-200 rounded-sm;
}
/* .no-scrollbar::-webkit-scrollbar {
        display: none;
    }
    .no-scrollbar {
        -ms-overflow-style: none;
        scrollbar-width: none;  
  } */

.font-mono {
  font-family: 'Fira Code', monospace;
  font-weight: 400;
  font-style: normal;
}

.font-sans {
  font-family: 'Metrophobic', sans-serif;
  font-weight: 400;
  font-style: normal;
}

.section-title {
  padding-top: 90px;
}

#mainContent > #table-of-contents {
  display: none;
}
#mainContent > #table-of-contents + ul {
  display: none;
}
#mainContent > hr {
  border-top-color: var(--color-border);
  border-top-width: 2px;
  border-top-style: solid;
  margin-top: 0.5rem;
}

#visible-table-of-contents li:has(.active-link) {
  @apply border-l-primary-foreground text-primary-foreground;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.3s;
  animation-duration: 0.3s;
}
#visible-table-of-contents li {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  margin-left: -2px;
  border-left-width: 2px;
  border-left-color: transparent;
  padding-left: 0.75rem;
  --tw-text-opacity: 1;
  @apply text-text-muted text-caption;
  /* color: rgb(94 113 141 / var(--tw-text-opacity, 1)); */
}

.code {
  font-family: 'Code';
  font-weight: 100;
  @apply bg-primary text-primary-foreground;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  border-radius: 0.375rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  display: inline-block;
  user-select: all;
}
.button {
  font-size: 3rem;
  line-height: 4.875rem;
  letter-spacing: -2.3px;
  background-color: red;
}

/* .uid .splide__pagination__page {
  background-color: red;
} */

@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

iframe body {
  background-color: red !important;
}

.hero {
  /* @apply bg-gradient-to-tl from-primary-200  via-primary-800 via-25% to-primary-200 to-85%; */
  /* background:linear-gradient(138deg,rgba(169, 205, 207, 1) 0%, rgba(56, 117, 122, 1) 25%, rgba(56, 117, 122, 1) 70%, rgba(169, 205, 207, 1) 100%); */
  @apply flex items-center justify-center;
  background-image: url("data:image/svg+xml,<svg id='patternId' width='100%' height='100%' xmlns='http://www.w3.org/2000/svg'><defs><pattern id='a' patternUnits='userSpaceOnUse' width='32' height='32' patternTransform='scale(1) rotate(0)'><rect x='0' y='0' width='100%' height='100%' fill='none'/><path d='M37.657 10.343l-4.243 4.243m-2.828 2.828l-4.243 4.243m11.314 0l-4.243-4.243m-2.828-2.828l-4.243-4.243m-20.686 0l-4.243 4.243m-2.828 2.828l-4.243 4.243m11.314 0l-4.243-4.243m-2.828-2.828l-4.243-4.243'  stroke-linejoin='round' stroke-linecap='round' stroke-width='1' stroke='%23438e9680' fill='none'/><path d='M16-8v6m0 4v6m8-8h-6m-4 0H8m8 24v6m0 4v6m8-8h-6m-4 0H8'  stroke-linejoin='round' stroke-linecap='round' stroke-width='1' stroke='hsla(4.1,89.6%,58.4%,.25)' fill='none'/></pattern></defs><rect width='800%' height='800%' transform='translate(0,0)' fill='url(%23a)'/></svg>"),
    linear-gradient(
      138deg,
      rgba(169, 205, 207, 0.5) 0%,
      rgba(56, 117, 122, 0.5) 25%,
      rgba(56, 117, 122, 0.5) 70%,
      rgba(169, 205, 207, 0.5) 100%
    );
  &:where(.dark, .dark *) {
    background-image: url("data:image/svg+xml,<svg id='patternId' width='100%' height='100%' xmlns='http://www.w3.org/2000/svg'><defs><pattern id='a' patternUnits='userSpaceOnUse' width='32' height='32' patternTransform='scale(1) rotate(0)'><rect x='0' y='0' width='100%' height='100%' fill='hsla(240,6.7%,17.6%,0)'/><path d='M37.657 10.343l-4.243 4.243m-2.828 2.828l-4.243 4.243m11.314 0l-4.243-4.243m-2.828-2.828l-4.243-4.243m-20.686 0l-4.243 4.243m-2.828 2.828l-4.243 4.243m11.314 0l-4.243-4.243m-2.828-2.828l-4.243-4.243'  stroke-linejoin='round' stroke-linecap='round' stroke-width='1' stroke='%23438e9638' fill='none'/><path d='M16-8v6m0 4v6m8-8h-6m-4 0H8m8 24v6m0 4v6m8-8h-6m-4 0H8'  stroke-linejoin='round' stroke-linecap='round' stroke-width='1' stroke='hsla(4.1,89.6%,58.4%,.35)' fill='none'/></pattern></defs><rect width='800%' height='800%' transform='translate(0,0)' fill='url(%23a)'/></svg>"),
      linear-gradient(
        138deg,
        rgba(101, 163, 169, 0.5) 0%,
        rgba(44, 92, 96, 0.5) 25%,
        rgba(44, 92, 96, 0.5) 70%,
        rgba(101, 163, 169, 0.5) 100%
      );
  }
}

.animate-effect {
  transition: all 0.5s ease-in-out;
}

.animate-effect {
  animation: effect 0.5s ease-in-out linear;
}

@keyframes effect {
  0% {
    transform: translate(-100%, 100%) scale(0);
  }
  50% {
    transform: translate(-25%, 25%) scale(0.5);
  }
  100% {
    transform: translate(0%, 0%) scale(1);
  }
}

.t-shadow {
  --tw-text-shadow-color: #a9cdcf80;
  text-shadow:
    0px 1px 2px var(--tw-text-shadow-color),
    0px 3px 2px var(--tw-text-shadow-color),
    /*  */ 0px 4px 8px var(--tw-text-shadow-color);
  &:where(.dark, .dark *) {
    --tw-text-shadow-color: #20434680;
  }
}

/* scroll bar */
.scrollbar-thin {
  scrollbar-width: thin;
  scrollbar-color: transparent transparent;
}
.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
}
.scrollbar-thin::-webkit-scrollbar-track {
  background: transparent;
}
.scrollbar-thin::-webkit-scrollbar-thumb {
  background: red;
  border-radius: 3px;
  @media (prefers-color-scheme: dark) {
  }
}
.scrollbar-thin::-webkit-scrollbar-thumb:hover {
  background: #555;
}

body {
  @apply bg-bg-dark;
}

.new-hero {
  color: var(--color-primary);
}

:root {
  --line-color: hsl(0, 0%, 20%);
  --line-highlight-color: hsl(0, 0%, 0%);
  --dot-color: hsl(185, 37%, 20%);
  --star-white-color: hsl(0, 0%, 30%);
  --star-primary-color: hsl(185, 37%, 20%);
}
.dark {
  --line-color: hsl(0, 0%, 75%);
  --line-highlight-color: hsl(0, 0%, 95%);
  --dot-color: hsl(183, 28%, 74%);
  --star-white-color: hsl(0, 0%, 100%);
  --star-primary-color: hsl(186, 32%, 33%);
}
